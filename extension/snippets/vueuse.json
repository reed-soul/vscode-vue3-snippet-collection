{
  "Vue3 useLocalStorage": {
    "prefix": "v3storage",
    "body": [
      "const ${1:state} = useLocalStorage('${2:key}', ${3:defaultValue})"
    ],
    "description": "使用 VueUse 的 useLocalStorage"
  },
  "Vue3 useFetch": {
    "prefix": "v3fetch",
    "body": [
      "const { data, error, loading, execute } = useFetch('${1:url}')",
      "",
      "watch(data, (newData) => {",
      "\t${2:// 处理数据}",
      "})"
    ],
    "description": "使用 VueUse 的 useFetch"
  },
  "Vue3 useIntersectionObserver": {
    "prefix": "v3observer",
    "body": [
      "const target = ref(null)",
      "const isVisible = ref(false)",
      "",
      "useIntersectionObserver(target, ([{ isIntersecting }]) => {",
      "\tisVisible.value = isIntersecting",
      "\tif (isIntersecting) {",
      "\t\t${1:// 元素进入视口时的逻辑}",
      "\t}",
      "})"
    ],
    "description": "使用 VueUse 的 useIntersectionObserver 实现懒加载"
  }
} 